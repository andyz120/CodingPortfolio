
SELECT * 
FROM dbo.CovidDeaths
order by 3,4


SELECT *
FROM dbo.CovidVaccinations
order by 3,4

--------------------------------------------------------------
SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM dbo.CovidDeaths
order by 1,2

-- Looking at Total Cases vs Total Deaths--
-- Shows the Likelihood of  dying if you contract covid in your country--

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)* 100 AS DeathPercentage
FROM dbo.CovidDeaths
WHERE location like '%states%'
order by 1,2

-- Looking at Countries with highest Infection Rate Compared to Population--

SELECT  Location, date, Population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/Population))* 100 AS PercentPopulationInfected
FROM dbo.CovidDeaths
--WHERE location like '%states%'
GROUP BY Location, date, Population
order by PercentPopulationInfected desc
  --OFFSET 500 ROWS FETCH NEXT 500 ROWS ONLY



--Showing Countries with Highest Death Count Per Population--

SELECT Location, MAX(cast(Total_deaths as int)) as TotalDeathCount
FROM dbo.CovidDeaths
--WHERE location like '%states%'
WHERE continent is null
GROUP BY Location
order by TotalDeathCount desc

--GLOBAL NUMBERS--

Select date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) AS total_deaths, SUM(cast(new_deaths as int))/SUM
(new_cases)* 100 as DeathPercentage
FROM dbo.CovidDeaths
WHERE continent is not null
Group by date
order by 1,2

--Looking at Total Population vs Vaccinations--
-- Shows Percentage of Population that has recieved at least one Covid Vaccine--

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From dbo.CovidDeaths dea
Join dbo.CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
order by 2,3


-- Using CTE to perform Calculation on Partition By in previous query--

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From dbo.CovidDeaths dea
Join dbo.CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac


-- Using Temp Table to perform Calculation on Partition By in the previous query--


DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)


Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(bigint,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From dbo.CovidDeaths dea
Join dbo.CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3



-- Creating View to store data for later visualizations--

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From dbo.CovidDeaths dea
Join dbo.CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 

